name: Frontend Container Build and Deploy Pipeline

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  ACR_REGISTRY: ${{ secrets.ACR_REGISTRY_SERVER }}
  FRONTEND_IMAGE: ${{ vars.FRONTEND_DOCKER_IMAGE_NAME }}
  VERSION: ${{ vars.VERSION_MAJOR }}.${{ vars.VERSION_MINOR }}.${{ vars.VERSION_PATCH }}-${{ github.run_number }}
  DEV_APP_NAME: ""
  UAT_APP_NAME: ""
  PRD_APP_NAME: ""

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: preparation
    if: ${{ github.ref == 'refs/heads/main' }}
    outputs:
      image_tag: ${{ env.ACR_REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ env.VERSION }}
    steps:
    - uses: actions/checkout@v2
    
    - name: Azure Container Registry Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_REGISTRY }}
        username: ${{ secrets.ACR_REGISTRY_USERNAME }}
        password: ${{ secrets.ACR_REGISTRY_PASSWORD }}

    - name: Build and Push Image
      run: |
        IMAGE_TAG=${{ env.ACR_REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ env.VERSION }}
        LATEST_TAG=${{ env.ACR_REGISTRY }}/${{ env.FRONTEND_IMAGE }}:latest
        docker build -t $IMAGE_TAG -t $LATEST_TAG .
        docker push $IMAGE_TAG
        docker push $LATEST_TAG

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Echo container image
      run: |
          echo ${{ needs.build-and-push.outputs.image_tag }}

          
    - name: Deploy to Dev Environment
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.DEV_APP_NAME }}
        images: ${{ needs.build-and-push.outputs.image_tag }}
    
    - name: Azure logout
      run: az logout
      if: always()

  deploy-uat:
    needs: [build-and-push, deploy-dev]
    runs-on: ubuntu-latest
    environment: uat
    
    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Deploy to UAT
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.UAT_APP_NAME }}
        images: ${{ needs.build-and-push.outputs.image_tag }}
    
    - name: Azure logout
      run: az logout
      if: always()


  deploy-prod:
    needs: [build-and-push, deploy-dev, deploy-uat]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Deploy to Production
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.PRD_APP_NAME }}
        images: ${{ needs.build-and-push.outputs.image_tag }}
    
    - name: Azure logout
      run: az logout
      if: always()
